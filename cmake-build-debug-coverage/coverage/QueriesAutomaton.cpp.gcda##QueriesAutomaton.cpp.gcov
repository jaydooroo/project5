        -:    0:Source:/users/guest/e/ejh612/tmp/tmp.60y5MWDIxy/QueriesAutomaton.cpp
        -:    0:Graph:/users/guest/e/ejh612/tmp/tmp.60y5MWDIxy/cmake-build-debug-coverage/CMakeFiles/project4.dir/QueriesAutomaton.cpp.gcno
        -:    0:Data:/users/guest/e/ejh612/tmp/tmp.60y5MWDIxy/cmake-build-debug-coverage/CMakeFiles/project4.dir/QueriesAutomaton.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by ejh61 on 2021-09-15.
        -:    3://
        -:    4:
        -:    5:#include "QueriesAutomaton.h"
        -:    6:
function _ZN16QueriesAutomaton2S0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 134 returned 100% blocks executed 100%
      134:    7:void QueriesAutomaton::S0(const std::string &input) {
      134:    8:    if(input[index] == 'Q') {
      134:    8-block  0
call    0 returned 134
branch  1 taken 1 (fallthrough)
branch  2 taken 133
        1:    9:        inputRead++;
        1:   10:        index++;
        1:   11:        S1(input);
        1:   11-block  0
call    0 returned 1
        -:   12:    }
        -:   13:    else {
      133:   14:        Serr();
      133:   14-block  0
call    0 returned 133
        -:   15:    }
      134:   16:}
        -:   17:
        -:   18:
function _ZN16QueriesAutomaton2S1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 75%
        1:   19:void QueriesAutomaton::S1(const std::string &input) {
        -:   20:
        1:   21:    if((unsigned) index >= input.size()){
        1:   21-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    #####:   22:        Serr();
    %%%%%:   22-block  0
call    0 never executed
        -:   23:    }
        1:   24:    else if (input[index] == 'u'){
        1:   24-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   25:        inputRead++;
        1:   26:        index++;
        1:   27:        S2(input);
        1:   27-block  0
call    0 returned 1
        -:   28:    }
        -:   29:    else {
    #####:   30:        Serr();
    %%%%%:   30-block  0
call    0 never executed
        -:   31:    }
        1:   32:}
        -:   33:
function _ZN16QueriesAutomaton2S2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 75%
        1:   34:void QueriesAutomaton::S2(const std::string &input) {
        -:   35:
        1:   36:    if((unsigned) index >= input.size()){
        1:   36-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    #####:   37:        Serr();
    %%%%%:   37-block  0
call    0 never executed
        -:   38:    }
        1:   39:    else if (input[index] == 'e'){
        1:   39-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   40:        inputRead++;
        1:   41:        index++;
        1:   42:        S3(input);
        1:   42-block  0
call    0 returned 1
        -:   43:    }
        -:   44:    else {
    #####:   45:        Serr();
    %%%%%:   45-block  0
call    0 never executed
        -:   46:    }
        1:   47:}
        -:   48:
function _ZN16QueriesAutomaton2S3ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 75%
        1:   49:void QueriesAutomaton::S3(const std::string &input) {
        -:   50:
        1:   51:    if((unsigned) index >= input.size()){
        1:   51-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    #####:   52:        Serr();
    %%%%%:   52-block  0
call    0 never executed
        -:   53:    }
        1:   54:    else if (input[index] == 'r'){
        1:   54-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   55:        inputRead++;
        1:   56:        index++;
        1:   57:        S4(input);
        1:   57-block  0
call    0 returned 1
        -:   58:    }
        -:   59:    else {
    #####:   60:        Serr();
    %%%%%:   60-block  0
call    0 never executed
        -:   61:    }
        1:   62:}
        -:   63:
function _ZN16QueriesAutomaton2S4ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 75%
        1:   64:void QueriesAutomaton::S4(const std::string &input) {
        -:   65:
        1:   66:    if((unsigned) index >= input.size()){
        1:   66-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    #####:   67:        Serr();
    %%%%%:   67-block  0
call    0 never executed
        -:   68:    }
        1:   69:    else if (input[index] == 'i'){
        1:   69-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   70:        inputRead++;
        1:   71:        index++;
        1:   72:        S5(input);
        1:   72-block  0
call    0 returned 1
        -:   73:    }
        -:   74:    else {
    #####:   75:        Serr();
    %%%%%:   75-block  0
call    0 never executed
        -:   76:    }
        1:   77:}
        -:   78:
function _ZN16QueriesAutomaton2S5ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 75%
        1:   79:void QueriesAutomaton::S5(const std::string &input) {
        -:   80:
        1:   81:    if((unsigned) index >= input.size()){
        1:   81-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    #####:   82:        Serr();
    %%%%%:   82-block  0
call    0 never executed
        -:   83:    }
        1:   84:    else if (input[index] == 'e'){
        1:   84-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   85:        inputRead++;
        1:   86:        index++;
        1:   87:        S6(input);
        1:   87-block  0
call    0 returned 1
        -:   88:    }
        -:   89:    else {
    #####:   90:        Serr();
    %%%%%:   90-block  0
call    0 never executed
        -:   91:    }
        1:   92:}
function _ZN16QueriesAutomaton2S6ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 75%
        1:   93:void QueriesAutomaton::S6(const std::string &input) {
        -:   94:
        1:   95:    if((unsigned) index >= input.size()){
        1:   95-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    #####:   96:        Serr();
    %%%%%:   96-block  0
call    0 never executed
        -:   97:    }
        1:   98:    else if (input[index] == 's'){
        1:   98-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   99:        inputRead++;
        1:   99-block  0
        -:  100:    }
        -:  101:    else {
    #####:  102:        Serr();
    %%%%%:  102-block  0
call    0 never executed
        -:  103:    }
        1:  104:}
