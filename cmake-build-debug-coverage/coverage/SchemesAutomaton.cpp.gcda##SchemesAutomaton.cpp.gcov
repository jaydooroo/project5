        -:    0:Source:/users/guest/e/ejh612/tmp/tmp.60y5MWDIxy/SchemesAutomaton.cpp
        -:    0:Graph:/users/guest/e/ejh612/tmp/tmp.60y5MWDIxy/cmake-build-debug-coverage/CMakeFiles/project4.dir/SchemesAutomaton.cpp.gcno
        -:    0:Data:/users/guest/e/ejh612/tmp/tmp.60y5MWDIxy/cmake-build-debug-coverage/CMakeFiles/project4.dir/SchemesAutomaton.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by ejh61 on 2021-09-15.
        -:    3://
        -:    4:
        -:    5:#include "SchemesAutomaton.h"
        -:    6:
function _ZN16SchemesAutomaton2S0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 134 returned 100% blocks executed 100%
      134:    7:void SchemesAutomaton::S0(const std::string &input) {
      134:    8:    if(input[index] == 'S') {
      134:    8-block  0
call    0 returned 134
branch  1 taken 4 (fallthrough)
branch  2 taken 130
        4:    9:        inputRead++;
        4:   10:        index++;
        4:   11:        S1(input);
        4:   11-block  0
call    0 returned 4
        -:   12:    }
        -:   13:    else {
      130:   14:        Serr();
      130:   14-block  0
call    0 returned 130
        -:   15:    }
      134:   16:}
        -:   17:
function _ZN16SchemesAutomaton2S1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 4 returned 100% blocks executed 88%
        4:   18:void SchemesAutomaton::S1(const std::string &input) {
        -:   19:
        4:   20:    if((unsigned) index >= input.size()){
        4:   20-block  0
call    0 returned 4
branch  1 taken 0 (fallthrough)
branch  2 taken 4
    #####:   21:        Serr();
    %%%%%:   21-block  0
call    0 never executed
        -:   22:    }
        4:   23:    else if (input[index] == 'c'){
        4:   23-block  0
call    0 returned 4
branch  1 taken 1 (fallthrough)
branch  2 taken 3
        1:   24:        inputRead++;
        1:   25:        index++;
        1:   26:        S2(input);
        1:   26-block  0
call    0 returned 1
        -:   27:    }
        -:   28:    else {
        3:   29:        Serr();
        3:   29-block  0
call    0 returned 3
        -:   30:    }
        4:   31:}
        -:   32:
function _ZN16SchemesAutomaton2S2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 75%
        1:   33:void SchemesAutomaton::S2(const std::string &input) {
        -:   34:
        1:   35:    if((unsigned) index >= input.size()){
        1:   35-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    #####:   36:        Serr();
    %%%%%:   36-block  0
call    0 never executed
        -:   37:    }
        1:   38:    else if (input[index] == 'h'){
        1:   38-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   39:        inputRead++;
        1:   40:        index++;
        1:   41:        S3(input);
        1:   41-block  0
call    0 returned 1
        -:   42:    }
        -:   43:    else {
    #####:   44:        Serr();
    %%%%%:   44-block  0
call    0 never executed
        -:   45:    }
        1:   46:}
        -:   47:
function _ZN16SchemesAutomaton2S3ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 75%
        1:   48:void SchemesAutomaton::S3(const std::string &input) {
        -:   49:
        1:   50:    if((unsigned) index >= input.size()){
        1:   50-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    #####:   51:        Serr();
    %%%%%:   51-block  0
call    0 never executed
        -:   52:    }
        1:   53:    else if (input[index] == 'e'){
        1:   53-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   54:        inputRead++;
        1:   55:        index++;
        1:   56:        S4(input);
        1:   56-block  0
call    0 returned 1
        -:   57:    }
        -:   58:    else {
    #####:   59:        Serr();
    %%%%%:   59-block  0
call    0 never executed
        -:   60:    }
        1:   61:}
        -:   62:
function _ZN16SchemesAutomaton2S4ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 75%
        1:   63:void SchemesAutomaton::S4(const std::string &input) {
        -:   64:
        1:   65:    if((unsigned) index >= input.size()){
        1:   65-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    #####:   66:        Serr();
    %%%%%:   66-block  0
call    0 never executed
        -:   67:    }
        1:   68:    else if (input[index] == 'm'){
        1:   68-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   69:        inputRead++;
        1:   70:        index++;
        1:   71:        S5(input);
        1:   71-block  0
call    0 returned 1
        -:   72:    }
        -:   73:    else {
    #####:   74:        Serr();
    %%%%%:   74-block  0
call    0 never executed
        -:   75:    }
        1:   76:}
        -:   77:
function _ZN16SchemesAutomaton2S5ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 75%
        1:   78:void SchemesAutomaton::S5(const std::string &input) {
        -:   79:
        1:   80:    if((unsigned) index >= input.size()){
        1:   80-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    #####:   81:        Serr();
    %%%%%:   81-block  0
call    0 never executed
        -:   82:    }
        1:   83:    else if (input[index] == 'e'){
        1:   83-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   84:        inputRead++;
        1:   85:        index++;
        1:   86:        S6(input);
        1:   86-block  0
call    0 returned 1
        -:   87:    }
        -:   88:    else {
    #####:   89:        Serr();
    %%%%%:   89-block  0
call    0 never executed
        -:   90:    }
        1:   91:}
function _ZN16SchemesAutomaton2S6ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 75%
        1:   92:void SchemesAutomaton::S6(const std::string &input) {
        -:   93:
        1:   94:    if((unsigned) index >= input.size()){
        1:   94-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    #####:   95:        Serr();
    %%%%%:   95-block  0
call    0 never executed
        -:   96:    }
        1:   97:    else if (input[index] == 's'){
        1:   97-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:   98:        inputRead++;
        1:   98-block  0
        -:   99:    }
        -:  100:    else {
    #####:  101:        Serr();
    %%%%%:  101-block  0
call    0 never executed
        -:  102:    }
        1:  103:}
