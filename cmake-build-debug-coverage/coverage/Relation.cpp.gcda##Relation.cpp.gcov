        -:    0:Source:/users/guest/e/ejh612/tmp/tmp.60y5MWDIxy/Relation.cpp
        -:    0:Graph:/users/guest/e/ejh612/tmp/tmp.60y5MWDIxy/cmake-build-debug-coverage/CMakeFiles/project4.dir/Relation.cpp.gcno
        -:    0:Data:/users/guest/e/ejh612/tmp/tmp.60y5MWDIxy/cmake-build-debug-coverage/CMakeFiles/project4.dir/Relation.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by ejh61 on 2021-10-26.
        -:    3://
        -:    4:
        -:    5:#include "Relation.h"
        -:    6:
function _ZN8Relation8addTupleE5Tuple called 0 returned 0% blocks executed 0%
    #####:    7:void Relation::addTuple (Tuple tempTuple) {
    #####:    8:    tuples.insert(tempTuple);
    %%%%%:    8-block  0
call    0 never executed
    #####:    9:}
        -:   10:
function _ZN8Relation8toStringB5cxx11Ev called 0 returned 0% blocks executed 0%
    #####:   11:std::string Relation::toString() { // 구현해야함 근데 어케하는지 모르겠다 iter가 안먹힘 이유 찾아야함.
    #####:   12:    std::ostringstream oss;
    %%%%%:   12-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   12-block  1
call    3 never executed
    $$$$$:   12-block  2
call    4 never executed
        -:   13:
    #####:   14:   for (Tuple t : tuples){
    %%%%%:   14-block  0
call    0 never executed
call    1 never executed
    %%%%%:   14-block  1
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:   14-block  2
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   14-block  3
call    9 never executed
call   10 never executed
    $$$$$:   14-block  4
call   11 never executed
    #####:   15:       oss << "  ";
    %%%%%:   15-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   16:       for(unsigned int i = 0; i < header.headerSize(); i++)   // tuple 과 헤더를 그 row에 맞게 반복해서 출력
    %%%%%:   16-block  0
    %%%%%:   16-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   16-block  2
    #####:   17:           if(i != header.headerSize() - 1)
    %%%%%:   17-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   18:               oss << header.GetHeader().at(i) << "=" << t.getTuple().at(i) << ", ";
    %%%%%:   18-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   18-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   18-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   18-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   18-block  4
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   18-block  5
call   15 never executed
branch 16 never executed
branch 17 never executed
    %%%%%:   18-block  6
call   18 never executed
branch 19 never executed
branch 20 never executed
    %%%%%:   18-block  7
call   21 never executed
branch 22 never executed
branch 23 never executed
        -:   19:           else
    #####:   20:               oss << header.GetHeader().at(i) << "=" << t.getTuple().at(i) << std::endl;
    %%%%%:   20-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   20-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   20-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   20-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   20-block  4
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   20-block  5
call   15 never executed
branch 16 never executed
branch 17 never executed
    %%%%%:   20-block  6
call   18 never executed
branch 19 never executed
branch 20 never executed
    %%%%%:   20-block  7
call   21 never executed
branch 22 never executed
branch 23 never executed
        -:   21:   }
        -:   22:
    #####:   23:   return oss.str();
    %%%%%:   23-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   23-block  1
        -:   24:}
        -:   25:
function _ZN8Relation11selectValueEjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:   26:Relation Relation::selectValue (unsigned int index, std::string value) {   // parameters are index and value, index= attribute 위치, value = 값
    #####:   27:    Relation tempRelation(name,header); // putting the name and header in its Relation
    %%%%%:   27-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:   27-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
    $$$$$:   27-block  2
    $$$$$:   27-block  3
call    8 never executed
    #####:   28:    for (Tuple t : tuples) {
call    0 never executed
call    1 never executed
    %%%%%:   28-block  0
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:   28-block  1
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   28-block  2
call    9 never executed
call   10 never executed
    $$$$$:   28-block  3
call   11 never executed
    #####:   29:      if  (t.getTuple().at(index) == value){
    %%%%%:   29-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   29-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   29-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:   30:          tempRelation.addTuple(t);    // value(값) equal to the value in the tuple index, store this into the new realtion
    %%%%%:   30-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   30-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   30-block  2
call    6 never executed
    $$$$$:   30-block  3
call    7 never executed
    $$$$$:   30-block  4
        -:   31:      }
        -:   32:    }
        -:   33:
    #####:   34:    return tempRelation;
    %%%%%:   34-block  0
    %%%%%:   34-block  1
        -:   35:}
        -:   36:
function _ZN8Relation6selectEjj called 0 returned 0% blocks executed 0%
    #####:   37:Relation Relation::select(unsigned int index1, unsigned int index2) {   // parameters are index and index, (relation columns to select on same values)
        -:   38:    //똑같은 값 찾는거
    #####:   39:    Relation tempRelation(name, header);
    %%%%%:   39-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:   39-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
    $$$$$:   39-block  2
    $$$$$:   39-block  3
call    8 never executed
    #####:   40:    for (Tuple t : tuples) {
call    0 never executed
call    1 never executed
    %%%%%:   40-block  0
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:   40-block  1
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   40-block  2
call    9 never executed
call   10 never executed
    $$$$$:   40-block  3
call   11 never executed
        -:   41:
    #####:   42:        if (t.getTuple().at(index1) == t.getTuple().at(index2)){
    %%%%%:   42-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   42-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   42-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   42-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   42-block  4
call   12 never executed
branch 13 never executed
branch 14 never executed
    #####:   43:            tempRelation.addTuple(t);
    %%%%%:   43-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   43-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   43-block  2
call    6 never executed
    $$$$$:   43-block  3
call    7 never executed
    $$$$$:   43-block  4
        -:   44:        }
        -:   45:    }
    #####:   46:    return tempRelation;
    %%%%%:   46-block  0
    %%%%%:   46-block  1
        -:   47:}
        -:   48:
function _ZN8Relation7projectESt6vectorIjSaIjEE called 0 returned 0% blocks executed 0%
    #####:   49:Relation Relation::project ( std::vector<unsigned int> indices) {
        -:   50:
        -:   51:
    #####:   52:    Header tempHeader;
    %%%%%:   52-block  0
call    0 never executed
    %%%%%:   52-block  1
call    1 never executed
    $$$$$:   52-block  2
call    2 never executed
    #####:   53:    for (unsigned int i = 0; i < indices.size(); i++) {
    %%%%%:   53-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   54:        tempHeader.SetHeader(header.GetHeader().at(i));
    %%%%%:   54-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   54-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   54-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   54-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   54-block  4
call   12 never executed
    $$$$$:   54-block  5
call   13 never executed
    $$$$$:   54-block  6
        -:   55:    }
        -:   56:
    #####:   57:    Relation tempRelation (name,tempHeader);
    %%%%%:   57-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   57-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   57-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
    $$$$$:   57-block  3
    $$$$$:   57-block  4
        -:   58:
    #####:   59:        for (Tuple t : tuples) {
call    0 never executed
call    1 never executed
    %%%%%:   59-block  0
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:   59-block  1
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
call   10 never executed
    $$$$$:   59-block  2
call   11 never executed
    #####:   60:      Tuple tuple;
    %%%%%:   60-block  0
call    0 never executed
    $$$$$:   60-block  1
call    1 never executed
    #####:   61:        for (unsigned int i = 0; i < indices.size(); i++) {
    %%%%%:   61-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   62:            tuple.SetTuple(t.getTuple().at(indices.at(i))); // 하나씩 입력-
    %%%%%:   62-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   62-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   62-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   62-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   62-block  4
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   62-block  5
call   15 never executed
    $$$$$:   62-block  6
call   16 never executed
    $$$$$:   62-block  7
        -:   63:        }                                 //complete tuple
    #####:   64:        tempRelation.addTuple(tuple);    // add tuple
    %%%%%:   64-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   64-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   64-block  2
call    6 never executed
call    7 never executed
    $$$$$:   64-block  3
call    8 never executed
    $$$$$:   64-block  4
        -:   65:    }
    #####:   66:        return tempRelation;
    %%%%%:   66-block  0
    %%%%%:   66-block  1
        -:   67:}
        -:   68:
function _ZN8Relation6renameESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE called 0 returned 0% blocks executed 0%
    #####:   69:Relation Relation::rename (std::vector<std::string> attributes) {
    #####:   70:    Header tempHeader;
    %%%%%:   70-block  0
call    0 never executed
    %%%%%:   70-block  1
call    1 never executed
    $$$$$:   70-block  2
call    2 never executed
        -:   71:
    #####:   72:    for (unsigned int i = 0; i < attributes.size(); i++) {     //creating new temp header and put the attributes in it.
    %%%%%:   72-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   73:        tempHeader.SetHeader(attributes.at(i));
    %%%%%:   73-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   73-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   73-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   73-block  3
call    9 never executed
    $$$$$:   73-block  4
call   10 never executed
    $$$$$:   73-block  5
        -:   74:    }
        -:   75:
    #####:   76:    Relation tempRelation(name, tempHeader);   // creating new Relation
    %%%%%:   76-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   76-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   76-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
    $$$$$:   76-block  3
    $$$$$:   76-block  4
        -:   77:
    #####:   78:    for (Tuple t : tuples) {     //튜플 일일이 복붙
call    0 never executed
call    1 never executed
    %%%%%:   78-block  0
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:   78-block  1
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
    $$$$$:   78-block  2
call   10 never executed
    #####:   79:        tempRelation.addTuple(t);
    %%%%%:   79-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   79-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   79-block  2
call    6 never executed
call    7 never executed
    $$$$$:   79-block  3
call    8 never executed
    $$$$$:   79-block  4
        -:   80:    }
        -:   81:
    #####:   82:    return tempRelation;
    %%%%%:   82-block  0
    %%%%%:   82-block  1
        -:   83:}
        -:   84:
function _ZN8Relation11naturalJoinERS_ called 0 returned 0% blocks executed 0%
    #####:   85:Relation Relation::naturalJoin( Relation &tempRelation) {   // joining current relation with new relation(tempRelation)
        -:   86:
    #####:   87:    Relation result;
    %%%%%:   87-block  0
call    0 never executed
        -:   88:
    #####:   89:    std::vector<std::pair<unsigned int, unsigned  int >> duplicatedNumbers; // colums value which will be compared.
call    0 never executed
    %%%%%:   89-block  0
call    1 never executed
    $$$$$:   89-block  1
call    2 never executed
    #####:   90:    result.header = combineHeader(tempRelation.header, duplicatedNumbers); // attribute 업데이트
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   90-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   90-block  1
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   90-block  2
call    9 never executed
call   10 never executed
    $$$$$:   90-block  3
call   11 never executed
    $$$$$:   90-block  4
    $$$$$:   90-block  5
call   12 never executed
    $$$$$:   90-block  6
        -:   91:
        -:   92:   /* if(this->tuples.size() == 0 && duplicatedNumbers.size() == 0) {
        -:   93:        result = tempRelation;
        -:   94:    }*/
        -:   95:
    #####:   96:        for (Tuple t: this->tuples) {    // tuples 업데이트
call    0 never executed
call    1 never executed
    %%%%%:   96-block  0
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:   96-block  1
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   96-block  2
call    9 never executed
call   10 never executed
    $$$$$:   96-block  3
call   11 never executed
    #####:   97:            for (Tuple x: tempRelation.tuples) {
    %%%%%:   97-block  0
call    0 never executed
call    1 never executed
    %%%%%:   97-block  1
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:   97-block  2
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   97-block  3
call    9 never executed
call   10 never executed
    $$$$$:   97-block  4
call   11 never executed
        -:   98:
        -:   99:                // 어떤 atribute값도 중복되지 않을경우 생각해서 해야함.
    #####:  100:                if (duplicatedNumbers.size() == 0) { // 중복되는게 없을경우 그냥 다 때려밖는다
    %%%%%:  100-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  101:                    result.addTuple(combineTuples(t, x, duplicatedNumbers));
    %%%%%:  101-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  101-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  101-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  101-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:  101-block  4
call   12 never executed
call   13 never executed
call   14 never executed
    $$$$$:  101-block  5
call   15 never executed
    $$$$$:  101-block  6
    $$$$$:  101-block  7
call   16 never executed
    $$$$$:  101-block  8
    $$$$$:  101-block  9
call   17 never executed
    $$$$$:  101-block 10
        -:  102:                }
        -:  103:
    #####:  104:                if (isJoinable(t, x, duplicatedNumbers)) {
    %%%%%:  104-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  104-block  1
branch  3 never executed
branch  4 never executed
    #####:  105:                    result.addTuple(combineTuples(t, x, duplicatedNumbers));
    %%%%%:  105-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  105-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  105-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  105-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:  105-block  4
call   12 never executed
call   13 never executed
call   14 never executed
    $$$$$:  105-block  5
call   15 never executed
    $$$$$:  105-block  6
    $$$$$:  105-block  7
call   16 never executed
    $$$$$:  105-block  8
    $$$$$:  105-block  9
call   17 never executed
    $$$$$:  105-block 10
        -:  106:                }
        -:  107:            }
        -:  108:        }
        -:  109:
        -:  110:
    #####:  111:    return result;
    %%%%%:  111-block  0
    %%%%%:  111-block  1
        -:  112:}
        -:  113:
function _ZN8Relation13combineHeaderE6HeaderRSt6vectorISt4pairIjjESaIS3_EE called 0 returned 0% blocks executed 0%
    #####:  114:Header Relation::combineHeader( Header tempHeader,std::vector<std::pair<unsigned int, unsigned int >> &tempNumbers) {
    #####:  115:    Header result;
    %%%%%:  115-block  0
call    0 never executed
        -:  116:
        -:  117:
    #####:  118:    for(unsigned int i = 0; i < this->header.headerSize(); i++) {
    %%%%%:  118-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  119:        for (unsigned int j = 0; j < tempHeader.headerSize(); j++) {
    %%%%%:  119-block  0
    %%%%%:  119-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  119-block  2
        -:  120:
    #####:  121:            if (this->header.GetHeader().at(i) == tempHeader.GetHeader().at(j)) {     // this->Relation 에 있는 값들을 tempHeader 에 있는 값들과(attributes) 비교해
    %%%%%:  121-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  121-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  121-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  121-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:  121-block  4
call   12 never executed
branch 13 never executed
branch 14 never executed
        -:  122:
    #####:  123:                tempNumbers.push_back(std::make_pair(i,j));     // 페어로 만들어서 tempNumbers 에 나중에 비교해야하는 attributes 저장
    %%%%%:  123-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  123-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  123-block  2
    $$$$$:  123-block  3
        -:  124:            }
        -:  125:
        -:  126:        }
        -:  127:       /* if(duplicateValue >= 0) {
        -:  128:            tempHeader.GetHeader().erase(tempHeader.GetHeader().begin() + duplicateValue);      // 같은 값이 나올경우 tempHeader 백터안에 있는값을 삭제
        -:  129:        }
        -:  130:        */
        -:  131:
    #####:  132:        result.SetHeader(this->header.GetHeader().at(i));              // 한번씩 반복해서 검증을 마칠때마다 i 번째에있는 값 새로운 result에 저장
    %%%%%:  132-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  132-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  132-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  132-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:  132-block  4
call   12 never executed
    $$$$$:  132-block  5
call   13 never executed
    $$$$$:  132-block  6
        -:  133:
        -:  134:    }
        -:  135:
        -:  136:
        -:  137:
    #####:  138:    for(unsigned int i = 0; i < tempHeader.headerSize(); i++) {    // 중복 안된 부분들 result에 저장 (만약 중복되는 부분이 없을때 통째로 다 넣음)
    %%%%%:  138-block  0
    %%%%%:  138-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  138-block  2
    #####:  139:        int countMatch = 0;  // 중복되는 attribute 가 있는지 확인하기 위한 변수 (중복시 값증가)
    #####:  140:        for(unsigned int j = 0 ; j < tempNumbers.size(); j++) {
    %%%%%:  140-block  0
    %%%%%:  140-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  140-block  2
    #####:  141:            if (i == tempNumbers.at(j).second)  // 중복시
    %%%%%:  141-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  141-block  1
branch  3 never executed
branch  4 never executed
    #####:  142:                countMatch++;                   // 값증가
    %%%%%:  142-block  0
        -:  143:        }
    #####:  144:        if (countMatch == 0 )   // 중복이 없을시
    %%%%%:  144-block  0
branch  0 never executed
branch  1 never executed
    #####:  145:            result.SetHeader(tempHeader.GetHeader().at(i));  // result에 추가
    %%%%%:  145-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  145-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  145-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  145-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:  145-block  4
call   12 never executed
    $$$$$:  145-block  5
call   13 never executed
    $$$$$:  145-block  6
        -:  146:    }
        -:  147:
    #####:  148:    return result;
    %%%%%:  148-block  0
    %%%%%:  148-block  1
        -:  149:}
        -:  150:
function _ZN8Relation10isJoinableER5TupleS1_RSt6vectorISt4pairIjjESaIS4_EE called 0 returned 0% blocks executed 0%
    #####:  151:bool Relation::isJoinable (Tuple &compareTuples1,Tuple &compareTuples2,std:: vector<std::pair<unsigned  int, unsigned  int>> &tempNumbers){ // 두개의 tuples를 받고 백터안에 있는 값들에 따라서 비교를 한다
    #####:  152:    for (unsigned int i = 0; i < tempNumbers.size(); i++) { // 두개의 튜플값이 vector안에 있는 경우의 수를 모두 충족해야 true 아닐씨 false
    %%%%%:  152-block  0
    %%%%%:  152-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  152-block  2
    #####:  153:        if (compareTuples1.getTuple().at(tempNumbers.at(i).first) != compareTuples2.getTuple().at(tempNumbers.at(i).second)){
    %%%%%:  153-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    #####:  154:            return false;
    %%%%%:  154-block  0
        -:  155:        }
        -:  156:    }
    #####:  157:    return true;
    %%%%%:  157-block  0
        -:  158:}
        -:  159:
function _ZN8Relation13combineTuplesE5TupleS0_RSt6vectorISt4pairIjjESaIS3_EE called 0 returned 0% blocks executed 0%
    #####:  160:Tuple Relation::combineTuples(Tuple compareTuples1, Tuple compareTuples2, std::vector<std::pair<unsigned int, unsigned int>> &tempNumbers) {
    #####:  161:    Tuple returnTuple;
    %%%%%:  161-block  0
call    0 never executed
        -:  162:  /*
        -:  163:    for (unsigned int i = 0; i < tempNumbers.size(); i++){  // 중복되는 값이 있을 경우 삭제
        -:  164:        compareTuples2.getTuple().erase( compareTuples2.getTuple().begin() + tempNumbers.at(i).second);
        -:  165:        // delete duplicate compare tuples values in 2nd one
        -:  166:    }
        -:  167:*/
    #####:  168:    for (unsigned int i = 0; i < compareTuples1.getTuple().size(); i++) {  // 첫번째 튜플에 있는값 모두 returntuple에 저장
    %%%%%:  168-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  168-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:  169:        returnTuple.SetTuple(compareTuples1.getTuple().at(i));
    %%%%%:  169-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  169-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  169-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  169-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:  169-block  4
call   12 never executed
    $$$$$:  169-block  5
call   13 never executed
    $$$$$:  169-block  6
        -:  170:    }
    #####:  171:    for(unsigned int i = 0; i < compareTuples2.getTuple().size(); i++) {    // 중복 안된 부분들 returntupel 에 저장 (만약 중복되는 부분이 없을때 통째로 다 넣음)
    %%%%%:  171-block  0
    %%%%%:  171-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  171-block  2
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  171-block  3
    #####:  172:        int countMatch = 0;  // 중복되는 attribute 가 있는지 확인하기 위한 변수 (중복시 값증가)
    #####:  173:        for(unsigned int j = 0 ; j < tempNumbers.size(); j++) {
    %%%%%:  173-block  0
    %%%%%:  173-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  173-block  2
    #####:  174:            if (i == tempNumbers.at(j).second)  // 중복시
    %%%%%:  174-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  174-block  1
branch  3 never executed
branch  4 never executed
    #####:  175:                countMatch++;                   // 값증가
    %%%%%:  175-block  0
        -:  176:        }
    #####:  177:        if (countMatch == 0 )   // 중복이 없을시
    %%%%%:  177-block  0
branch  0 never executed
branch  1 never executed
    #####:  178:            returnTuple.SetTuple(compareTuples2.getTuple().at(i));  // 값추가
    %%%%%:  178-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  178-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  178-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  178-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:  178-block  4
call   12 never executed
    $$$$$:  178-block  5
call   13 never executed
    $$$$$:  178-block  6
        -:  179:    }
        -:  180:
        -:  181: /*  for (unsigned int i = 0; i < compareTuples2.getTuple().size(); i++) {
        -:  182:        returnTuple.SetTuple(compareTuples2.getTuple().at(i));
        -:  183:    }
        -:  184:*/
    #####:  185:    return returnTuple;
    %%%%%:  185-block  0
    %%%%%:  185-block  1
        -:  186:}
        -:  187:
function _ZN8Relation14unionRelationsERS_ called 0 returned 0% blocks executed 0%
    #####:  188:void Relation::unionRelations (Relation &tempRelation) {  // tempRelation안에 있는 tuples 다 추가하고 중복은 set니 알아서 파기됨.
        -:  189:
    #####:  190:    for(Tuple t: tempRelation.tuples){
    %%%%%:  190-block  0
call    0 never executed
call    1 never executed
    %%%%%:  190-block  1
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  190-block  2
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
    $$$$$:  190-block  3
call   10 never executed
    #####:  191:        this->addTuple(t);
    %%%%%:  191-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  191-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  191-block  2
call    6 never executed
call    7 never executed
    $$$$$:  191-block  3
call    8 never executed
    $$$$$:  191-block  4
        -:  192:    }
    #####:  193:}
    %%%%%:  193-block  0
        -:  194:
        -:  195:
